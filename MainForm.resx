<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAAABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAA
        AAAOWScAAAAAAA1/DQAMdwcALL2+AAVIBQArubsADYINAAVEBQANgA0ADH4FAARBAQAqtrUADHgHAA1/
        DAAvyM8AI0d+AAVHBQAquboADYMNAAZEBgAptbIABUMFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBARABAQEB
        AQEBAQEBAQEBARABEAEBAQEFFBQUFAgBAQEBARABAQEUCwQSDwAUFBEBAQEBEAcTBwkJCQcUFgEBAQEB
        ARAJCQoDDQkJCQEBAQEBAQEBEAkCFQYMDgkBAQEBAQEBARABCQkJCQkJCQEBAQEBAQEBEAEBAQEBAQEJ
        AQEBAQEBARABAQEBAQEBAQEBAQEBAQEBEAEBAQEBAQEBAQEBAQEBARABEAEBAQEBAQEBAQEBAQEBEAEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAf//AAD//wAA//8AAL//AABeBwAA3AEAAOAHAADgDwAA8A8AAPQH
        AAD7+wAA+/8AAP3/AAD9fwAA/v8AAP//AAA=
</value>
  </data>
</root>